import requests
import csv

# Replace with your API endpoint
api_endpoint = 'https://api.com/v2/userid?id='

# Replace with your actual credentials
username = 'your_username'
password = 'your_password'

# Input and output file paths
input_csv_path = 'input.csv'
output_csv_path = 'output.csv'

# Function to make API requests and extract values
def fetch_data_from_api(api_url):
    try:
        response = requests.get(api_url, auth=(username, password))
        response.raise_for_status()  # Raise an HTTPError for bad responses
        data = response.json()
        return data.get('X', 'N/A'), data.get('Y', 'N/A'), data.get('Z', 'N/A')
    except requests.exceptions.RequestException as e:
        print(f"Error making API request for URL: {api_url}. Error: {e}")
        return 'Error', 'Error', 'Error'

# Read input CSV file
with open(input_csv_path, 'r') as input_file:
    reader = csv.DictReader(input_file)
    rows = list(reader)

# Prepare header for output CSV file
output_header = ['ID', 'X', 'Y', 'Z']

# Write output CSV file
with open(output_csv_path, 'w', newline='') as output_file:
    writer = csv.writer(output_file)

    # Write header outside the loop
    writer.writerow(output_header)

    for row in rows:
        # Extract ID from the input CSV row
        user_id = row['ID']

        # Make API request
        api_url = f"{api_endpoint}{user_id}"
        x_value, y_value, z_value = fetch_data_from_api(api_url)

        # Write the result to the output CSV
        writer.writerow([user_id, x_value, y_value, z_value])

print(f"Output written to {output_csv_path}")
